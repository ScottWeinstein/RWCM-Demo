//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace DemoSite.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ProductEF : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ProductEF object using the connection string found in the 'ProductEF' section of the application configuration file.
        /// </summary>
        public ProductEF() : base("name=ProductEF", "ProductEF")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProductEF object.
        /// </summary>
        public ProductEF(string connectionString) : base(connectionString, "ProductEF")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ProductEF object.
        /// </summary>
        public ProductEF(EntityConnection connection) : base(connection, "ProductEF")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DimSide> DimSides
        {
            get
            {
                if ((_DimSides == null))
                {
                    _DimSides = base.CreateObjectSet<DimSide>("DimSides");
                }
                return _DimSides;
            }
        }
        private ObjectSet<DimSide> _DimSides;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DimSymbol> DimSymbols
        {
            get
            {
                if ((_DimSymbols == null))
                {
                    _DimSymbols = base.CreateObjectSet<DimSymbol>("DimSymbols");
                }
                return _DimSymbols;
            }
        }
        private ObjectSet<DimSymbol> _DimSymbols;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FactTrade> FactTrades
        {
            get
            {
                if ((_FactTrades == null))
                {
                    _FactTrades = base.CreateObjectSet<FactTrade>("FactTrades");
                }
                return _FactTrades;
            }
        }
        private ObjectSet<FactTrade> _FactTrades;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Desk> Desks
        {
            get
            {
                if ((_Desks == null))
                {
                    _Desks = base.CreateObjectSet<Desk>("Desks");
                }
                return _Desks;
            }
        }
        private ObjectSet<Desk> _Desks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SrcTableSmall> SrcTableSmalls
        {
            get
            {
                if ((_SrcTableSmalls == null))
                {
                    _SrcTableSmalls = base.CreateObjectSet<SrcTableSmall>("SrcTableSmalls");
                }
                return _SrcTableSmalls;
            }
        }
        private ObjectSet<SrcTableSmall> _SrcTableSmalls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Symbol> Symbols
        {
            get
            {
                if ((_Symbols == null))
                {
                    _Symbols = base.CreateObjectSet<Symbol>("Symbols");
                }
                return _Symbols;
            }
        }
        private ObjectSet<Symbol> _Symbols;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TradersToDesksMap> TradersToDesksMaps
        {
            get
            {
                if ((_TradersToDesksMaps == null))
                {
                    _TradersToDesksMaps = base.CreateObjectSet<TradersToDesksMap>("TradersToDesksMaps");
                }
                return _TradersToDesksMaps;
            }
        }
        private ObjectSet<TradersToDesksMap> _TradersToDesksMaps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Trade> Trades
        {
            get
            {
                if ((_Trades == null))
                {
                    _Trades = base.CreateObjectSet<Trade>("Trades");
                }
                return _Trades;
            }
        }
        private ObjectSet<Trade> _Trades;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DimSides EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDimSides(DimSide dimSide)
        {
            base.AddObject("DimSides", dimSide);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DimSymbols EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDimSymbols(DimSymbol dimSymbol)
        {
            base.AddObject("DimSymbols", dimSymbol);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FactTrades EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFactTrades(FactTrade factTrade)
        {
            base.AddObject("FactTrades", factTrade);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Desks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDesks(Desk desk)
        {
            base.AddObject("Desks", desk);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SrcTableSmalls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSrcTableSmalls(SrcTableSmall srcTableSmall)
        {
            base.AddObject("SrcTableSmalls", srcTableSmall);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Symbols EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSymbols(Symbol symbol)
        {
            base.AddObject("Symbols", symbol);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TradersToDesksMaps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTradersToDesksMaps(TradersToDesksMap tradersToDesksMap)
        {
            base.AddObject("TradersToDesksMaps", tradersToDesksMap);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Trades EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrades(Trade trade)
        {
            base.AddObject("Trades", trade);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProductDB", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="accountName">Initial value of the AccountName property.</param>
        public static Account CreateAccount(global::System.Int32 accountId, global::System.String accountName)
        {
            Account account = new Account();
            account.AccountId = accountId;
            account.AccountName = accountName;
            return account;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                if (_AccountId != value)
                {
                    OnAccountIdChanging(value);
                    ReportPropertyChanging("AccountId");
                    _AccountId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountId");
                    OnAccountIdChanged();
                }
            }
        }
        private global::System.Int32 _AccountId;
        partial void OnAccountIdChanging(global::System.Int32 value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountName
        {
            get
            {
                return _AccountName;
            }
            set
            {
                OnAccountNameChanging(value);
                ReportPropertyChanging("AccountName");
                _AccountName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountName");
                OnAccountNameChanged();
            }
        }
        private global::System.String _AccountName;
        partial void OnAccountNameChanging(global::System.String value);
        partial void OnAccountNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProductDB", Name="Desk")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Desk : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Desk object.
        /// </summary>
        /// <param name="deskId">Initial value of the DeskId property.</param>
        /// <param name="deskName">Initial value of the DeskName property.</param>
        public static Desk CreateDesk(global::System.Int32 deskId, global::System.String deskName)
        {
            Desk desk = new Desk();
            desk.DeskId = deskId;
            desk.DeskName = deskName;
            return desk;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeskId
        {
            get
            {
                return _DeskId;
            }
            set
            {
                if (_DeskId != value)
                {
                    OnDeskIdChanging(value);
                    ReportPropertyChanging("DeskId");
                    _DeskId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeskId");
                    OnDeskIdChanged();
                }
            }
        }
        private global::System.Int32 _DeskId;
        partial void OnDeskIdChanging(global::System.Int32 value);
        partial void OnDeskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeskName
        {
            get
            {
                return _DeskName;
            }
            set
            {
                OnDeskNameChanging(value);
                ReportPropertyChanging("DeskName");
                _DeskName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeskName");
                OnDeskNameChanged();
            }
        }
        private global::System.String _DeskName;
        partial void OnDeskNameChanging(global::System.String value);
        partial void OnDeskNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProductDB", Name="DimSide")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DimSide : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DimSide object.
        /// </summary>
        /// <param name="sideKey">Initial value of the SideKey property.</param>
        /// <param name="sideValue">Initial value of the SideValue property.</param>
        public static DimSide CreateDimSide(global::System.Int32 sideKey, global::System.String sideValue)
        {
            DimSide dimSide = new DimSide();
            dimSide.SideKey = sideKey;
            dimSide.SideValue = sideValue;
            return dimSide;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SideKey
        {
            get
            {
                return _SideKey;
            }
            set
            {
                if (_SideKey != value)
                {
                    OnSideKeyChanging(value);
                    ReportPropertyChanging("SideKey");
                    _SideKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SideKey");
                    OnSideKeyChanged();
                }
            }
        }
        private global::System.Int32 _SideKey;
        partial void OnSideKeyChanging(global::System.Int32 value);
        partial void OnSideKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SideValue
        {
            get
            {
                return _SideValue;
            }
            set
            {
                OnSideValueChanging(value);
                ReportPropertyChanging("SideValue");
                _SideValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SideValue");
                OnSideValueChanged();
            }
        }
        private global::System.String _SideValue;
        partial void OnSideValueChanging(global::System.String value);
        partial void OnSideValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProductDB", Name="DimSymbol")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DimSymbol : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DimSymbol object.
        /// </summary>
        /// <param name="symbolKey">Initial value of the SymbolKey property.</param>
        /// <param name="symbolValue">Initial value of the SymbolValue property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static DimSymbol CreateDimSymbol(global::System.Int32 symbolKey, global::System.String symbolValue, global::System.String fullName)
        {
            DimSymbol dimSymbol = new DimSymbol();
            dimSymbol.SymbolKey = symbolKey;
            dimSymbol.SymbolValue = symbolValue;
            dimSymbol.FullName = fullName;
            return dimSymbol;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SymbolKey
        {
            get
            {
                return _SymbolKey;
            }
            set
            {
                if (_SymbolKey != value)
                {
                    OnSymbolKeyChanging(value);
                    ReportPropertyChanging("SymbolKey");
                    _SymbolKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SymbolKey");
                    OnSymbolKeyChanged();
                }
            }
        }
        private global::System.Int32 _SymbolKey;
        partial void OnSymbolKeyChanging(global::System.Int32 value);
        partial void OnSymbolKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SymbolValue
        {
            get
            {
                return _SymbolValue;
            }
            set
            {
                OnSymbolValueChanging(value);
                ReportPropertyChanging("SymbolValue");
                _SymbolValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SymbolValue");
                OnSymbolValueChanged();
            }
        }
        private global::System.String _SymbolValue;
        partial void OnSymbolValueChanging(global::System.String value);
        partial void OnSymbolValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProductDB", Name="FactTrade")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FactTrade : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FactTrade object.
        /// </summary>
        /// <param name="tradeKey">Initial value of the TradeKey property.</param>
        /// <param name="executionTimeKey">Initial value of the ExecutionTimeKey property.</param>
        /// <param name="sideKey">Initial value of the SideKey property.</param>
        /// <param name="symbolKey">Initial value of the SymbolKey property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        /// <param name="exchangeFee">Initial value of the ExchangeFee property.</param>
        /// <param name="brokerFee">Initial value of the BrokerFee property.</param>
        /// <param name="sECFee">Initial value of the SECFee property.</param>
        /// <param name="marginFee">Initial value of the MarginFee property.</param>
        public static FactTrade CreateFactTrade(global::System.Int64 tradeKey, global::System.DateTime executionTimeKey, global::System.Int32 sideKey, global::System.Int32 symbolKey, global::System.Decimal price, global::System.Double size, global::System.Decimal exchangeFee, global::System.Decimal brokerFee, global::System.Decimal sECFee, global::System.Decimal marginFee)
        {
            FactTrade factTrade = new FactTrade();
            factTrade.TradeKey = tradeKey;
            factTrade.ExecutionTimeKey = executionTimeKey;
            factTrade.SideKey = sideKey;
            factTrade.SymbolKey = symbolKey;
            factTrade.Price = price;
            factTrade.Size = size;
            factTrade.ExchangeFee = exchangeFee;
            factTrade.BrokerFee = brokerFee;
            factTrade.SECFee = sECFee;
            factTrade.MarginFee = marginFee;
            return factTrade;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TradeKey
        {
            get
            {
                return _TradeKey;
            }
            set
            {
                if (_TradeKey != value)
                {
                    OnTradeKeyChanging(value);
                    ReportPropertyChanging("TradeKey");
                    _TradeKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TradeKey");
                    OnTradeKeyChanged();
                }
            }
        }
        private global::System.Int64 _TradeKey;
        partial void OnTradeKeyChanging(global::System.Int64 value);
        partial void OnTradeKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExecutionTimeKey
        {
            get
            {
                return _ExecutionTimeKey;
            }
            set
            {
                OnExecutionTimeKeyChanging(value);
                ReportPropertyChanging("ExecutionTimeKey");
                _ExecutionTimeKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExecutionTimeKey");
                OnExecutionTimeKeyChanged();
            }
        }
        private global::System.DateTime _ExecutionTimeKey;
        partial void OnExecutionTimeKeyChanging(global::System.DateTime value);
        partial void OnExecutionTimeKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SideKey
        {
            get
            {
                return _SideKey;
            }
            set
            {
                OnSideKeyChanging(value);
                ReportPropertyChanging("SideKey");
                _SideKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SideKey");
                OnSideKeyChanged();
            }
        }
        private global::System.Int32 _SideKey;
        partial void OnSideKeyChanging(global::System.Int32 value);
        partial void OnSideKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SymbolKey
        {
            get
            {
                return _SymbolKey;
            }
            set
            {
                OnSymbolKeyChanging(value);
                ReportPropertyChanging("SymbolKey");
                _SymbolKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SymbolKey");
                OnSymbolKeyChanged();
            }
        }
        private global::System.Int32 _SymbolKey;
        partial void OnSymbolKeyChanging(global::System.Int32 value);
        partial void OnSymbolKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.Double _Size;
        partial void OnSizeChanging(global::System.Double value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ExchangeFee
        {
            get
            {
                return _ExchangeFee;
            }
            set
            {
                OnExchangeFeeChanging(value);
                ReportPropertyChanging("ExchangeFee");
                _ExchangeFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExchangeFee");
                OnExchangeFeeChanged();
            }
        }
        private global::System.Decimal _ExchangeFee;
        partial void OnExchangeFeeChanging(global::System.Decimal value);
        partial void OnExchangeFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal BrokerFee
        {
            get
            {
                return _BrokerFee;
            }
            set
            {
                OnBrokerFeeChanging(value);
                ReportPropertyChanging("BrokerFee");
                _BrokerFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BrokerFee");
                OnBrokerFeeChanged();
            }
        }
        private global::System.Decimal _BrokerFee;
        partial void OnBrokerFeeChanging(global::System.Decimal value);
        partial void OnBrokerFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SECFee
        {
            get
            {
                return _SECFee;
            }
            set
            {
                OnSECFeeChanging(value);
                ReportPropertyChanging("SECFee");
                _SECFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SECFee");
                OnSECFeeChanged();
            }
        }
        private global::System.Decimal _SECFee;
        partial void OnSECFeeChanging(global::System.Decimal value);
        partial void OnSECFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MarginFee
        {
            get
            {
                return _MarginFee;
            }
            set
            {
                OnMarginFeeChanging(value);
                ReportPropertyChanging("MarginFee");
                _MarginFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarginFee");
                OnMarginFeeChanged();
            }
        }
        private global::System.Decimal _MarginFee;
        partial void OnMarginFeeChanging(global::System.Decimal value);
        partial void OnMarginFeeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProductDB", Name="SrcTableSmall")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SrcTableSmall : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SrcTableSmall object.
        /// </summary>
        /// <param name="column_1">Initial value of the column_1 property.</param>
        /// <param name="column_3">Initial value of the column_3 property.</param>
        public static SrcTableSmall CreateSrcTableSmall(global::System.Int32 column_1, global::System.String column_3)
        {
            SrcTableSmall srcTableSmall = new SrcTableSmall();
            srcTableSmall.column_1 = column_1;
            srcTableSmall.column_3 = column_3;
            return srcTableSmall;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 column_1
        {
            get
            {
                return _column_1;
            }
            set
            {
                if (_column_1 != value)
                {
                    Oncolumn_1Changing(value);
                    ReportPropertyChanging("column_1");
                    _column_1 = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("column_1");
                    Oncolumn_1Changed();
                }
            }
        }
        private global::System.Int32 _column_1;
        partial void Oncolumn_1Changing(global::System.Int32 value);
        partial void Oncolumn_1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> column_2
        {
            get
            {
                return _column_2;
            }
            set
            {
                Oncolumn_2Changing(value);
                ReportPropertyChanging("column_2");
                _column_2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("column_2");
                Oncolumn_2Changed();
            }
        }
        private Nullable<global::System.Int32> _column_2;
        partial void Oncolumn_2Changing(Nullable<global::System.Int32> value);
        partial void Oncolumn_2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String column_3
        {
            get
            {
                return _column_3;
            }
            set
            {
                if (_column_3 != value)
                {
                    Oncolumn_3Changing(value);
                    ReportPropertyChanging("column_3");
                    _column_3 = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("column_3");
                    Oncolumn_3Changed();
                }
            }
        }
        private global::System.String _column_3;
        partial void Oncolumn_3Changing(global::System.String value);
        partial void Oncolumn_3Changed();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProductDB", Name="Symbol")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Symbol : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Symbol object.
        /// </summary>
        /// <param name="symbolId">Initial value of the SymbolId property.</param>
        /// <param name="symbol1">Initial value of the Symbol1 property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="exchange">Initial value of the Exchange property.</param>
        public static Symbol CreateSymbol(global::System.Int32 symbolId, global::System.String symbol1, global::System.String fullName, global::System.String exchange)
        {
            Symbol symbol = new Symbol();
            symbol.SymbolId = symbolId;
            symbol.Symbol1 = symbol1;
            symbol.FullName = fullName;
            symbol.Exchange = exchange;
            return symbol;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SymbolId
        {
            get
            {
                return _SymbolId;
            }
            set
            {
                if (_SymbolId != value)
                {
                    OnSymbolIdChanging(value);
                    ReportPropertyChanging("SymbolId");
                    _SymbolId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SymbolId");
                    OnSymbolIdChanged();
                }
            }
        }
        private global::System.Int32 _SymbolId;
        partial void OnSymbolIdChanging(global::System.Int32 value);
        partial void OnSymbolIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symbol1
        {
            get
            {
                return _Symbol1;
            }
            set
            {
                OnSymbol1Changing(value);
                ReportPropertyChanging("Symbol1");
                _Symbol1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Symbol1");
                OnSymbol1Changed();
            }
        }
        private global::System.String _Symbol1;
        partial void OnSymbol1Changing(global::System.String value);
        partial void OnSymbol1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Exchange
        {
            get
            {
                return _Exchange;
            }
            set
            {
                OnExchangeChanging(value);
                ReportPropertyChanging("Exchange");
                _Exchange = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Exchange");
                OnExchangeChanged();
            }
        }
        private global::System.String _Exchange;
        partial void OnExchangeChanging(global::System.String value);
        partial void OnExchangeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProductDB", Name="Trade")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Trade : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Trade object.
        /// </summary>
        /// <param name="executionId">Initial value of the ExecutionId property.</param>
        /// <param name="timeStamp">Initial value of the TimeStamp property.</param>
        /// <param name="side">Initial value of the Side property.</param>
        /// <param name="traderDeskMapId">Initial value of the TraderDeskMapId property.</param>
        /// <param name="symbolId">Initial value of the SymbolId property.</param>
        /// <param name="customerId">Initial value of the CustomerId property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        public static Trade CreateTrade(global::System.Int64 executionId, global::System.DateTime timeStamp, global::System.String side, global::System.Int32 traderDeskMapId, global::System.Int32 symbolId, global::System.Int32 customerId, global::System.Decimal price, global::System.Double size)
        {
            Trade trade = new Trade();
            trade.ExecutionId = executionId;
            trade.TimeStamp = timeStamp;
            trade.Side = side;
            trade.TraderDeskMapId = traderDeskMapId;
            trade.SymbolId = symbolId;
            trade.CustomerId = customerId;
            trade.Price = price;
            trade.Size = size;
            return trade;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExecutionId
        {
            get
            {
                return _ExecutionId;
            }
            set
            {
                if (_ExecutionId != value)
                {
                    OnExecutionIdChanging(value);
                    ReportPropertyChanging("ExecutionId");
                    _ExecutionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExecutionId");
                    OnExecutionIdChanged();
                }
            }
        }
        private global::System.Int64 _ExecutionId;
        partial void OnExecutionIdChanging(global::System.Int64 value);
        partial void OnExecutionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeStamp
        {
            get
            {
                return _TimeStamp;
            }
            set
            {
                if (_TimeStamp != value)
                {
                    OnTimeStampChanging(value);
                    ReportPropertyChanging("TimeStamp");
                    _TimeStamp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TimeStamp");
                    OnTimeStampChanged();
                }
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnTimeStampChanging(global::System.DateTime value);
        partial void OnTimeStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Side
        {
            get
            {
                return _Side;
            }
            set
            {
                if (_Side != value)
                {
                    OnSideChanging(value);
                    ReportPropertyChanging("Side");
                    _Side = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Side");
                    OnSideChanged();
                }
            }
        }
        private global::System.String _Side;
        partial void OnSideChanging(global::System.String value);
        partial void OnSideChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TraderDeskMapId
        {
            get
            {
                return _TraderDeskMapId;
            }
            set
            {
                if (_TraderDeskMapId != value)
                {
                    OnTraderDeskMapIdChanging(value);
                    ReportPropertyChanging("TraderDeskMapId");
                    _TraderDeskMapId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TraderDeskMapId");
                    OnTraderDeskMapIdChanged();
                }
            }
        }
        private global::System.Int32 _TraderDeskMapId;
        partial void OnTraderDeskMapIdChanging(global::System.Int32 value);
        partial void OnTraderDeskMapIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SymbolId
        {
            get
            {
                return _SymbolId;
            }
            set
            {
                if (_SymbolId != value)
                {
                    OnSymbolIdChanging(value);
                    ReportPropertyChanging("SymbolId");
                    _SymbolId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SymbolId");
                    OnSymbolIdChanged();
                }
            }
        }
        private global::System.Int32 _SymbolId;
        partial void OnSymbolIdChanging(global::System.Int32 value);
        partial void OnSymbolIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomerId
        {
            get
            {
                return _CustomerId;
            }
            set
            {
                if (_CustomerId != value)
                {
                    OnCustomerIdChanging(value);
                    ReportPropertyChanging("CustomerId");
                    _CustomerId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomerId");
                    OnCustomerIdChanged();
                }
            }
        }
        private global::System.Int32 _CustomerId;
        partial void OnCustomerIdChanging(global::System.Int32 value);
        partial void OnCustomerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Price
        {
            get
            {
                return _Price;
            }
            set
            {
                if (_Price != value)
                {
                    OnPriceChanging(value);
                    ReportPropertyChanging("Price");
                    _Price = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Price");
                    OnPriceChanged();
                }
            }
        }
        private global::System.Decimal _Price;
        partial void OnPriceChanging(global::System.Decimal value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Size
        {
            get
            {
                return _Size;
            }
            set
            {
                if (_Size != value)
                {
                    OnSizeChanging(value);
                    ReportPropertyChanging("Size");
                    _Size = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Size");
                    OnSizeChanged();
                }
            }
        }
        private global::System.Double _Size;
        partial void OnSizeChanging(global::System.Double value);
        partial void OnSizeChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProductDB", Name="TradersToDesksMap")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TradersToDesksMap : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TradersToDesksMap object.
        /// </summary>
        /// <param name="toDMapId">Initial value of the ToDMapId property.</param>
        /// <param name="traderId">Initial value of the TraderId property.</param>
        /// <param name="deskId">Initial value of the DeskId property.</param>
        public static TradersToDesksMap CreateTradersToDesksMap(global::System.Int32 toDMapId, global::System.Int32 traderId, global::System.Int32 deskId)
        {
            TradersToDesksMap tradersToDesksMap = new TradersToDesksMap();
            tradersToDesksMap.ToDMapId = toDMapId;
            tradersToDesksMap.TraderId = traderId;
            tradersToDesksMap.DeskId = deskId;
            return tradersToDesksMap;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ToDMapId
        {
            get
            {
                return _ToDMapId;
            }
            set
            {
                if (_ToDMapId != value)
                {
                    OnToDMapIdChanging(value);
                    ReportPropertyChanging("ToDMapId");
                    _ToDMapId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ToDMapId");
                    OnToDMapIdChanged();
                }
            }
        }
        private global::System.Int32 _ToDMapId;
        partial void OnToDMapIdChanging(global::System.Int32 value);
        partial void OnToDMapIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TraderId
        {
            get
            {
                return _TraderId;
            }
            set
            {
                if (_TraderId != value)
                {
                    OnTraderIdChanging(value);
                    ReportPropertyChanging("TraderId");
                    _TraderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TraderId");
                    OnTraderIdChanged();
                }
            }
        }
        private global::System.Int32 _TraderId;
        partial void OnTraderIdChanging(global::System.Int32 value);
        partial void OnTraderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeskId
        {
            get
            {
                return _DeskId;
            }
            set
            {
                if (_DeskId != value)
                {
                    OnDeskIdChanging(value);
                    ReportPropertyChanging("DeskId");
                    _DeskId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeskId");
                    OnDeskIdChanged();
                }
            }
        }
        private global::System.Int32 _DeskId;
        partial void OnDeskIdChanging(global::System.Int32 value);
        partial void OnDeskIdChanged();

        #endregion
    
    }

    #endregion
    
}
